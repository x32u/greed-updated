# generated by datamodel-codegen:
#   filename:  https://ws.audioscrobbler.com/2.0/?method=artist.getSimilar&artist=Metallica&api_key=4210d59afeeb6c350442d7141747704c&format=json
#   timestamp: 2023-10-11T02:13:15+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field

from cogs.lastfm import http


class ImageItem(BaseModel):
    text: str = Field(..., alias="#text")
    size: str


class ArtistItem(BaseModel):
    name: str
    mbid: Optional[str]
    match: str
    url: str
    image: List[ImageItem]
    streamable: str


class FieldAttr(BaseModel):
    artist: str


class SimilarArtists(BaseModel):
    artist: List[ArtistItem]
    field_attr: FieldAttr = Field(..., alias="@attr")

    @classmethod
    async def fetch(
        cls,
        artist: str,
        limit: int = 50,
        page: int = 1,
    ) -> List[ArtistItem]:
        response = await http.get(
            "/2.0/",
            params={
                "method": "artist.getSimilar",
                "artist": artist,
                "limit": limit,
                "page": page,
            },
        )
        if response.status != 200:
            return []

        return cls.parse_obj((await response.json())["similarartists"]).artist
